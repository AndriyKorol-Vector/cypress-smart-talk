<?xml version="1.0"?>
<testsuites failures="1" errors="0" tests="121">
  <testsuite name="Root Suite" timestamp="2021-12-05T21:47:31" tests="0" file="cypress/integration/api-tests/firstTest.ts" time="0.0000" failures="0"/>
  <testsuite name="[Custom Test Suite]" timestamp="2021-12-05T21:47:31" tests="1" time="2.6270" failures="0">
    <testcase name="[Custom Test Suite] Verify an existing product in GOG" time="2.6000" classname="Verify an existing product in GOG"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:46:41" tests="0" file="cypress/integration/2-advanced-examples/network_requests.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Network Requests" timestamp="2021-12-05T21:46:41" tests="6" time="6.8880" failures="0">
    <testcase name="Network Requests cy.request() - make an XHR request" time="0.9610" classname="cy.request() - make an XHR request"/>
    <testcase name="Network Requests cy.request() - verify response using BDD syntax" time="0.6930" classname="cy.request() - verify response using BDD syntax"/>
    <testcase name="Network Requests cy.request() with query parameters" time="0.5370" classname="cy.request() with query parameters"/>
    <testcase name="Network Requests cy.request() - pass result to the second request" time="0.8390" classname="cy.request() - pass result to the second request"/>
    <testcase name="Network Requests cy.request() - save response in the shared test context" time="0.8280" classname="cy.request() - save response in the shared test context"/>
    <testcase name="Network Requests cy.intercept() - route responses to matching requests" time="1.7650" classname="cy.intercept() - route responses to matching requests"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:46:14" tests="0" file="cypress/integration/2-advanced-examples/cookies.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Cookies" timestamp="2021-12-05T21:46:14" tests="5" time="2.1690" failures="0">
    <testcase name="Cookies cy.getCookie() - get a browser cookie" time="0.4220" classname="cy.getCookie() - get a browser cookie"/>
    <testcase name="Cookies cy.getCookies() - get browser cookies" time="0.2290" classname="cy.getCookies() - get browser cookies"/>
    <testcase name="Cookies cy.setCookie() - set a browser cookie" time="0.1200" classname="cy.setCookie() - set a browser cookie"/>
    <testcase name="Cookies cy.clearCookie() - clear a browser cookie" time="0.2250" classname="cy.clearCookie() - clear a browser cookie"/>
    <testcase name="Cookies cy.clearCookies() - clear browser cookies" time="0.2410" classname="cy.clearCookies() - clear browser cookies"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:45:42" tests="0" file="cypress/integration/2-advanced-examples/actions.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Actions" timestamp="2021-12-05T21:45:42" tests="14" time="17.7710" failures="0">
    <testcase name="Actions .type() - type into a DOM element" time="5.0400" classname=".type() - type into a DOM element"/>
    <testcase name="Actions .focus() - focus on a DOM element" time="0.1960" classname=".focus() - focus on a DOM element"/>
    <testcase name="Actions .blur() - blur off a DOM element" time="0.5620" classname=".blur() - blur off a DOM element"/>
    <testcase name="Actions .clear() - clears an input or textarea element" time="0.6650" classname=".clear() - clears an input or textarea element"/>
    <testcase name="Actions .submit() - submit a form" time="0.4780" classname=".submit() - submit a form"/>
    <testcase name="Actions .click() - click on a DOM element" time="2.5380" classname=".click() - click on a DOM element"/>
    <testcase name="Actions .dblclick() - double click on a DOM element" time="0.2570" classname=".dblclick() - double click on a DOM element"/>
    <testcase name="Actions .rightclick() - right click on a DOM element" time="0.2270" classname=".rightclick() - right click on a DOM element"/>
    <testcase name="Actions .check() - check a checkbox or radio element" time="1.0910" classname=".check() - check a checkbox or radio element"/>
    <testcase name="Actions .uncheck() - uncheck a checkbox element" time="1.2770" classname=".uncheck() - uncheck a checkbox element"/>
    <testcase name="Actions .select() - select an option in a &lt;select&gt; element" time="1.0560" classname=".select() - select an option in a &lt;select&gt; element"/>
    <testcase name="Actions .scrollIntoView() - scroll an element into view" time="0.6920" classname=".scrollIntoView() - scroll an element into view"/>
    <testcase name="Actions .trigger() - trigger an event on a DOM element" time="0.2880" classname=".trigger() - trigger an event on a DOM element"/>
    <testcase name="Actions cy.scrollTo() - scroll the window or element to a position" time="2.2340" classname="cy.scrollTo() - scroll the window or element to a position"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:46:25" tests="0" file="cypress/integration/2-advanced-examples/local_storage.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Local Storage" timestamp="2021-12-05T21:46:25" tests="1" time="2.0000" failures="0">
    <testcase name="Local Storage cy.clearLocalStorage() - clear all data in local storage" time="0.7340" classname="cy.clearLocalStorage() - clear all data in local storage"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:46:50" tests="0" file="cypress/integration/2-advanced-examples/querying.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Querying" timestamp="2021-12-05T21:46:50" tests="5" time="2.8720" failures="0">
    <testcase name="Querying cy.get() - query DOM elements" time="0.4460" classname="cy.get() - query DOM elements"/>
    <testcase name="Querying cy.contains() - query DOM elements with matching content" time="0.2040" classname="cy.contains() - query DOM elements with matching content"/>
    <testcase name="Querying .within() - query DOM elements within a specific element" time="0.1400" classname=".within() - query DOM elements within a specific element"/>
    <testcase name="Querying cy.root() - query the root DOM element" time="0.1350" classname="cy.root() - query the root DOM element"/>
    <testcase name="Querying best practices - selecting elements" time="0.9360" classname="best practices - selecting elements"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:45:36" tests="0" file="cypress/integration/1-getting-started/todo.spec.js" time="0.0000" failures="0"/>
  <testsuite name="example to-do app" timestamp="2021-12-05T21:45:36" tests="3" time="0.0000" failures="0">
    <testcase name="example to-do app displays two todo items by default" time="0.7420" classname="displays two todo items by default"/>
    <testcase name="example to-do app can add new todo items" time="0.4530" classname="can add new todo items"/>
    <testcase name="example to-do app can check off an item as completed" time="0.2260" classname="can check off an item as completed"/>
  </testsuite>
  <testsuite name="with a checked task" timestamp="2021-12-05T21:45:40" tests="3" time="0.9450" failures="0">
    <testcase name="example to-do app with a checked task can filter for uncompleted tasks" time="0.3030" classname="can filter for uncompleted tasks"/>
    <testcase name="example to-do app with a checked task can filter for completed tasks" time="0.3250" classname="can filter for completed tasks"/>
    <testcase name="example to-do app with a checked task can delete all completed tasks" time="0.2940" classname="can delete all completed tasks"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:47:19" tests="0" file="cypress/integration/2-advanced-examples/waiting.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Waiting" timestamp="2021-12-05T21:47:19" tests="2" time="7.6180" failures="0">
    <testcase name="Waiting cy.wait() - wait for a specific amount of time" time="5.7110" classname="cy.wait() - wait for a specific amount of time"/>
    <testcase name="Waiting cy.wait() - wait for a specific route" time="0.6170" classname="cy.wait() - wait for a specific route"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:46:05" tests="0" file="cypress/integration/2-advanced-examples/assertions.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Assertions" timestamp="2021-12-05T21:46:05" tests="0" time="0.0000" failures="0"/>
  <testsuite name="Implicit Assertions" timestamp="2021-12-05T21:46:05" tests="2" time="1.7370" failures="0">
    <testcase name="Assertions Implicit Assertions .should() - make an assertion about the current subject" time="0.5620" classname=".should() - make an assertion about the current subject"/>
    <testcase name="Assertions Implicit Assertions .and() - chain multiple assertions together" time="0.1410" classname=".and() - chain multiple assertions together"/>
  </testsuite>
  <testsuite name="Explicit Assertions" timestamp="2021-12-05T21:46:06" tests="7" time="2.6050" failures="0">
    <testcase name="Assertions Explicit Assertions expect - make an assertion about a specified subject" time="0.1360" classname="expect - make an assertion about a specified subject"/>
    <testcase name="Assertions Explicit Assertions pass your own callback function to should()" time="0.1530" classname="pass your own callback function to should()"/>
    <testcase name="Assertions Explicit Assertions finds element by class name regex" time="0.1680" classname="finds element by class name regex"/>
    <testcase name="Assertions Explicit Assertions can throw any error" time="0.1660" classname="can throw any error"/>
    <testcase name="Assertions Explicit Assertions matches unknown text between two elements" time="0.1500" classname="matches unknown text between two elements"/>
    <testcase name="Assertions Explicit Assertions assert - assert shape of an object" time="0.1290" classname="assert - assert shape of an object"/>
    <testcase name="Assertions Explicit Assertions retries the should callback until assertions pass" time="1.6580" classname="retries the should callback until assertions pass"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:46:54" tests="0" file="cypress/integration/2-advanced-examples/spies_stubs_clocks.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Spies, Stubs, and Clock" timestamp="2021-12-05T21:46:54" tests="7" time="5.0200" failures="0">
    <testcase name="Spies, Stubs, and Clock cy.spy() - wrap a method in a spy" time="0.3830" classname="cy.spy() - wrap a method in a spy"/>
    <testcase name="Spies, Stubs, and Clock cy.spy() retries until assertions pass" time="2.5160" classname="cy.spy() retries until assertions pass"/>
    <testcase name="Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub" time="0.1300" classname="cy.stub() - create a stub and/or replace a function with stub"/>
    <testcase name="Spies, Stubs, and Clock cy.clock() - control time in the browser" time="0.2580" classname="cy.clock() - control time in the browser"/>
    <testcase name="Spies, Stubs, and Clock cy.tick() - move time in the browser" time="0.3290" classname="cy.tick() - move time in the browser"/>
    <testcase name="Spies, Stubs, and Clock cy.stub() matches depending on arguments" time="0.0530" classname="cy.stub() matches depending on arguments"/>
    <testcase name="Spies, Stubs, and Clock matches call arguments using Sinon matchers" time="0.0260" classname="matches call arguments using Sinon matchers"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:46:10" tests="0" file="cypress/integration/2-advanced-examples/connectors.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Connectors" timestamp="2021-12-05T21:46:10" tests="4" time="0.0000" failures="0">
    <testcase name="Connectors .each() - iterate over an array of elements" time="0.4520" classname=".each() - iterate over an array of elements"/>
    <testcase name="Connectors .its() - get properties on the current subject" time="0.1260" classname=".its() - get properties on the current subject"/>
    <testcase name="Connectors .invoke() - invoke a function on the current subject" time="0.1140" classname=".invoke() - invoke a function on the current subject"/>
    <testcase name="Connectors .spread() - spread an array as individual args to callback function" time="0.1160" classname=".spread() - spread an array as individual args to callback function"/>
  </testsuite>
  <testsuite name=".then()" timestamp="2021-12-05T21:46:12" tests="4" time="0.5120" failures="0">
    <testcase name="Connectors .then() invokes a callback function with the current subject" time="0.1660" classname="invokes a callback function with the current subject"/>
    <testcase name="Connectors .then() yields the returned value to the next command" time="0.1230" classname="yields the returned value to the next command"/>
    <testcase name="Connectors .then() yields the original subject without return" time="0.1110" classname="yields the original subject without return"/>
    <testcase name="Connectors .then() yields the value yielded by the last Cypress command inside" time="0.1110" classname="yields the value yielded by the last Cypress command inside"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:46:29" tests="0" file="cypress/integration/2-advanced-examples/location.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Location" timestamp="2021-12-05T21:46:29" tests="3" time="1.4980" failures="0">
    <testcase name="Location cy.hash() - get the current URL hash" time="0.2660" classname="cy.hash() - get the current URL hash"/>
    <testcase name="Location cy.location() - get window.location" time="0.1530" classname="cy.location() - get window.location"/>
    <testcase name="Location cy.url() - get the current URL" time="0.1330" classname="cy.url() - get the current URL"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:47:00" tests="0" file="cypress/integration/2-advanced-examples/traversal.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Traversal" timestamp="2021-12-05T21:47:00" tests="18" time="5.2970" failures="0">
    <testcase name="Traversal .children() - get child DOM elements" time="1.9200" classname=".children() - get child DOM elements"/>
    <testcase name="Traversal .closest() - get closest ancestor DOM element" time="0.1320" classname=".closest() - get closest ancestor DOM element"/>
    <testcase name="Traversal .eq() - get a DOM element at a specific index" time="0.1480" classname=".eq() - get a DOM element at a specific index"/>
    <testcase name="Traversal .filter() - get DOM elements that match the selector" time="0.1190" classname=".filter() - get DOM elements that match the selector"/>
    <testcase name="Traversal .find() - get descendant DOM elements of the selector" time="0.1400" classname=".find() - get descendant DOM elements of the selector"/>
    <testcase name="Traversal .first() - get first DOM element" time="0.1510" classname=".first() - get first DOM element"/>
    <testcase name="Traversal .last() - get last DOM element" time="0.1320" classname=".last() - get last DOM element"/>
    <testcase name="Traversal .next() - get next sibling DOM element" time="0.1300" classname=".next() - get next sibling DOM element"/>
    <testcase name="Traversal .nextAll() - get all next sibling DOM elements" time="0.1280" classname=".nextAll() - get all next sibling DOM elements"/>
    <testcase name="Traversal .nextUntil() - get next sibling DOM elements until next el" time="0.1680" classname=".nextUntil() - get next sibling DOM elements until next el"/>
    <testcase name="Traversal .not() - remove DOM elements from set of DOM elements" time="0.1240" classname=".not() - remove DOM elements from set of DOM elements"/>
    <testcase name="Traversal .parent() - get parent DOM element from DOM elements" time="0.1200" classname=".parent() - get parent DOM element from DOM elements"/>
    <testcase name="Traversal .parents() - get parent DOM elements from DOM elements" time="0.1360" classname=".parents() - get parent DOM elements from DOM elements"/>
    <testcase name="Traversal .parentsUntil() - get parent DOM elements from DOM elements until el" time="0.1610" classname=".parentsUntil() - get parent DOM elements from DOM elements until el"/>
    <testcase name="Traversal .prev() - get previous sibling DOM element" time="0.1230" classname=".prev() - get previous sibling DOM element"/>
    <testcase name="Traversal .prevAll() - get all previous sibling DOM elements" time="0.1320" classname=".prevAll() - get all previous sibling DOM elements"/>
    <testcase name="Traversal .prevUntil() - get all previous sibling DOM elements until el" time="0.1270" classname=".prevUntil() - get all previous sibling DOM elements until el"/>
    <testcase name="Traversal .siblings() - get all sibling DOM elements" time="0.1200" classname=".siblings() - get all sibling DOM elements"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:47:07" tests="0" file="cypress/integration/2-advanced-examples/utilities.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Utilities" timestamp="2021-12-05T21:47:07" tests="5" time="4.3010" failures="0">
    <testcase name="Utilities Cypress._ - call a lodash method" time="1.2670" classname="Cypress._ - call a lodash method"/>
    <testcase name="Utilities Cypress.$ - call a jQuery method" time="0.2350" classname="Cypress.$ - call a jQuery method"/>
    <testcase name="Utilities Cypress.Blob - blob utilities and base64 string conversion" time="0.2970" classname="Cypress.Blob - blob utilities and base64 string conversion"/>
    <testcase name="Utilities Cypress.minimatch - test out glob patterns against strings" time="0.1090" classname="Cypress.minimatch - test out glob patterns against strings"/>
    <testcase name="Utilities Cypress.Promise - instantiate a bluebird promise" time="1.1120" classname="Cypress.Promise - instantiate a bluebird promise"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:46:01" tests="0" file="cypress/integration/2-advanced-examples/aliasing.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Aliasing" timestamp="2021-12-05T21:46:01" tests="2" time="2.7450" failures="0">
    <testcase name="Aliasing .as() - alias a DOM element for later use" time="0.5800" classname=".as() - alias a DOM element for later use"/>
    <testcase name="Aliasing .as() - alias a route for later use" time="1.0490" classname=".as() - alias a route for later use"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:47:12" tests="0" file="cypress/integration/2-advanced-examples/viewport.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Viewport" timestamp="2021-12-05T21:47:12" tests="1" time="5.4520" failures="0">
    <testcase name="Viewport cy.viewport() - set the viewport size and dimension" time="4.4470" classname="cy.viewport() - set the viewport size and dimension"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:46:22" tests="0" file="cypress/integration/2-advanced-examples/files.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Files" timestamp="2021-12-05T21:46:22" tests="4" time="2.3730" failures="0">
    <testcase name="Files cy.fixture() - load a fixture" time="0.5650" classname="cy.fixture() - load a fixture"/>
    <testcase name="Files cy.fixture() or require - load a fixture" time="0.1130" classname="cy.fixture() or require - load a fixture"/>
    <testcase name="Files cy.readFile() - read file contents" time="0.1120" classname="cy.readFile() - read file contents"/>
    <testcase name="Files cy.writeFile() - write to a file" time="0.6360" classname="cy.writeFile() - write to a file"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:46:31" tests="0" file="cypress/integration/2-advanced-examples/misc.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Misc" timestamp="2021-12-05T21:46:31" tests="4" time="0.0000" failures="0">
    <testcase name="Misc .end() - end the command chain" time="0.5910" classname=".end() - end the command chain"/>
    <testcase name="Misc cy.exec() - execute a system command" time="0.2730" classname="cy.exec() - execute a system command"/>
    <testcase name="Misc cy.focused() - get the DOM element that has focus" time="0.3440" classname="cy.focused() - get the DOM element that has focus"/>
    <testcase name="Misc cy.wrap() - wrap an object" time="0.1240" classname="cy.wrap() - wrap an object"/>
  </testsuite>
  <testsuite name="Cypress.Screenshot" timestamp="2021-12-05T21:46:34" tests="2" time="1.4470" failures="0">
    <testcase name="Misc Cypress.Screenshot cy.screenshot() - take a screenshot" time="1.2860" classname="cy.screenshot() - take a screenshot"/>
    <testcase name="Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots" time="0.1340" classname="Cypress.Screenshot.defaults() - change default config of screenshots"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:46:17" tests="0" file="cypress/integration/2-advanced-examples/cypress_api.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Cypress.Commands" timestamp="2021-12-05T21:46:17" tests="1" time="1.6590" failures="0">
    <testcase name="Cypress.Commands .add() - create a custom command" time="0.3890" classname=".add() - create a custom command"/>
  </testsuite>
  <testsuite name="Cypress.Cookies" timestamp="2021-12-05T21:46:19" tests="3" time="0.4480" failures="0">
    <testcase name="Cypress.Cookies .debug() - enable or disable debugging" time="0.1860" classname=".debug() - enable or disable debugging"/>
    <testcase name="Cypress.Cookies .preserveOnce() - preserve cookies by key" time="0.1450" classname=".preserveOnce() - preserve cookies by key"/>
    <testcase name="Cypress.Cookies .defaults() - set defaults for all cookies" time="0.1080" classname=".defaults() - set defaults for all cookies"/>
  </testsuite>
  <testsuite name="Cypress.arch" timestamp="2021-12-05T21:46:19" tests="1" time="0.1140" failures="0">
    <testcase name="Cypress.arch Get CPU architecture name of underlying OS" time="0.1120" classname="Get CPU architecture name of underlying OS"/>
  </testsuite>
  <testsuite name="Cypress.config()" timestamp="2021-12-05T21:46:19" tests="1" time="0.1690" failures="1">
    <testcase name="Cypress.config() Get and set configuration options" time="0.0000" classname="Get and set configuration options">
      <failure message="expected { Object (chromeWebSecurity, defaultCommandTimeout, ...) } to have property 'baseUrl' of null, but got 'https://www.gog.com'" type="AssertionError"><![CDATA[AssertionError: expected { Object (chromeWebSecurity, defaultCommandTimeout, ...) } to have property 'baseUrl' of null, but got 'https://www.gog.com'
    at Context.eval (https://example.cypress.io/__cypress/tests?p=cypress\integration\2-advanced-examples\cypress_api.spec.js:174:30)]]></failure>
    </testcase>
  </testsuite>
  <testsuite name="Cypress.dom" timestamp="2021-12-05T21:46:20" tests="1" time="0.1380" failures="0">
    <testcase name="Cypress.dom .isHidden() - determine if a DOM element is hidden" time="0.1370" classname=".isHidden() - determine if a DOM element is hidden"/>
  </testsuite>
  <testsuite name="Cypress.env()" timestamp="2021-12-05T21:46:20" tests="1" time="0.2510" failures="0">
    <testcase name="Cypress.env() Get environment variables" time="0.2410" classname="Get environment variables"/>
  </testsuite>
  <testsuite name="Cypress.log" timestamp="2021-12-05T21:46:20" tests="1" time="0.1320" failures="0">
    <testcase name="Cypress.log Control what is printed to the Command Log" time="0.1260" classname="Control what is printed to the Command Log"/>
  </testsuite>
  <testsuite name="Cypress.platform" timestamp="2021-12-05T21:46:20" tests="1" time="0.2290" failures="0">
    <testcase name="Cypress.platform Get underlying OS name" time="0.2150" classname="Get underlying OS name"/>
  </testsuite>
  <testsuite name="Cypress.version" timestamp="2021-12-05T21:46:20" tests="1" time="0.1980" failures="0">
    <testcase name="Cypress.version Get current version of Cypress being run" time="0.1900" classname="Get current version of Cypress being run"/>
  </testsuite>
  <testsuite name="Cypress.spec" timestamp="2021-12-05T21:46:21" tests="1" time="0.1730" failures="0">
    <testcase name="Cypress.spec Get current spec information" time="0.1590" classname="Get current spec information"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:46:37" tests="0" file="cypress/integration/2-advanced-examples/navigation.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Navigation" timestamp="2021-12-05T21:46:37" tests="3" time="3.5380" failures="0">
    <testcase name="Navigation cy.go() - go back or forward in the browser's history" time="1.4340" classname="cy.go() - go back or forward in the browser's history"/>
    <testcase name="Navigation cy.reload() - reload the page" time="0.5410" classname="cy.reload() - reload the page"/>
    <testcase name="Navigation cy.visit() - visit a remote url" time="0.5420" classname="cy.visit() - visit a remote url"/>
  </testsuite>
  <testsuite name="Root Suite" timestamp="2021-12-05T21:47:28" tests="0" file="cypress/integration/2-advanced-examples/window.spec.js" time="0.0000" failures="0"/>
  <testsuite name="Window" timestamp="2021-12-05T21:47:28" tests="3" time="1.8760" failures="0">
    <testcase name="Window cy.window() - get the global window object" time="0.6380" classname="cy.window() - get the global window object"/>
    <testcase name="Window cy.document() - get the document object" time="0.1240" classname="cy.document() - get the document object"/>
    <testcase name="Window cy.title() - get the title" time="0.1010" classname="cy.title() - get the title"/>
  </testsuite>
</testsuites>